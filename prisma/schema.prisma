// schema.prisma

datasource db {
  provider = "mysql" 
  url      = env("DATABASE_URL") 
}

generator client {
  provider = "prisma-client-js" 
}

model User {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  password  String
  email     String   @unique
  role      Role     @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  orders    Order[]
  cartItems CartItem[]
  favorites  Favorite[]
}

model Product {
  id          Int       @id @default(autoincrement())
  name        String
  description String?
  price       Decimal    @default(0)
  stock       Int       @default(0)
  categoryId  Int
  brandId     Int
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  category    Category  @relation(fields: [categoryId], references: [id])
  brand       Brand     @relation(fields: [brandId], references: [id])
  orderItems  OrderItem[]
  warehouse   Warehouse[]
  cartItems   CartItem[]
  favorites    Favorite[]
}

model Category {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  products  Product[]
}

model Brand {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  products  Product[]
}

model Voucher {
  id              Int      @id @default(autoincrement())
  code            String   @unique
  discount        Decimal  @default(0)
  expirationDate  DateTime
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model Order {
  id          Int      @id @default(autoincrement())
  userId      Int
  totalPrice  Decimal  @default(0)
  status      String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  user        User     @relation(fields: [userId], references: [id])
  orderItems  OrderItem[]
}

model OrderItem {
  id        Int      @id @default(autoincrement())
  orderId   Int
  productId Int
  quantity  Int
  price     Decimal
  order     Order    @relation(fields: [orderId], references: [id])
  product   Product  @relation(fields: [productId], references: [id])
}

model Warehouse {
  id        Int      @id @default(autoincrement())
  productId Int
  quantity  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  product   Product  @relation(fields: [productId], references: [id])
}

model CartItem {
  id        Int      @id @default(autoincrement())
  userId    Int
  productId Int
  quantity  Int
  user      User     @relation(fields: [userId], references: [id])
  product   Product  @relation(fields: [productId], references: [id])
}

model Favorite {
  id        Int      @id @default(autoincrement())
  userId    Int
  productId Int
  user      User     @relation(fields: [userId], references: [id])
  product   Product  @relation(fields: [productId], references: [id])
}

enum Role {
  ADMIN
  USER
}
